from php_print import *
from collections import namedtuple
import csv
import os
import sys
os.chdir('C:\\_GITHUB\\bclnet\\RailBaron\\misc\\materials')
sys.path.append(os.getcwd())


def buildFile(boardId):
    # read cities
    path = os.path.join(boardId, 'cities.csv')
    cities = {}
    with open(path, newline='') as csvcities:
        for row in csv.DictReader(csvcities):
            city = namedtuple('city', 'id pos type')(
                row['id'],
                [int(row['posX']), int(row['posY'])],
                row['type'])
            cities[city.id] = city
            # print(city)

    # read rails
    path = os.path.join(boardId, 'rails.csv')
    rails = {}
    with open(path, newline='') as csvrails:
        for row in csv.DictReader(csvrails):
            stops = {}
            idPath = os.path.join(boardId, f'rails_{row["id"]}.csv')
            if os.path.isfile(idPath):
                with open(idPath, newline='') as csvrailid:
                    for idrow in csv.reader(csvrailid):
                        if idrow[0] == 'id' or idrow[0].startswith('/'):
                            continue
                        elif idrow[0].startswith('#'):
                            stop = []
                        else:
                            # list(filter('', idrow[3:]))
                            stop = [int(idrow[1]), int(idrow[2])] + idrow[3:]
                        stops[idrow[0]] = stop
                        # print(stop)
            rail = namedtuple('rail', 'id pos type name amount stops')(
                row['id'],
                [int(row['posX']), int(row['posY'])],
                row['type'],
                row['name'],
                row['amount'],
                stops)
            rails[rail.id] = rail
            # print(rail)

    # write board
    f = open('board_A2.php', 'w')
    f.write("""<?php
    // Autogenerated Board
    """)
    f.write(php_print('cities', cities))
    f.write(php_print('rails', rails))
    f.write("""return [$rails, $cities];""")
    f.close()


buildFile('board_A')
